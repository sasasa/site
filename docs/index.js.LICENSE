/******/

// webpackBootstrap

// install a JSONP callback for chunk loading

// add entry modules from loaded chunk to deferred list

// run deferred modules when all chunks ready

// The module cache

// object to store loaded and loading chunks

// undefined = chunk not loaded, null = chunk preloaded/prefetched

// Promise = chunk loading, 0 = chunk loaded

// The require function

// Check if module is in cache

// Create a new module (and put it into the cache)

// Execute the module function

// Return the exports of the module

// Flag the module as loaded

// expose the modules object (__webpack_modules__)

// expose the module cache

// define getter function for harmony exports

// define __esModule on exports

// create a fake namespace object

// mode & 1: value is a module id, require it

// mode & 2: merge all properties of value into the ns

// mode & 4: return value when already ns object

// mode & 8|1: behave like require

// getDefaultExport function for compatibility with non-harmony modules

// Object.prototype.hasOwnProperty.call

// __webpack_public_path__

// add entry module to deferred list

// run deferred modules when ready

/************************************************************************/

/***/

/* harmony import */

/*#__PURE__*/

// import "es6-promise/auto";

// import "fetch-polyfill";

// マイクロ秒までの精度を持った浮動小数点の値

// https://developer.mozilla.org/ja/docs/Web/API/Performance/now

// 一回前のカラーを外す

// カラーをつける

// ブラウザの描画更新単位と同じ単位で呼び出される

// 次の再描画が行われる前に次のアニメーションをする関数を呼び出す

// タブが非アクティブの時はFPSを落とす

// https://liginc.co.jp/web/js/130758

// when window width is <= 800px

// const sec = $('.swiper-slide');

// const nvp = sec.outerHeight() + sec.offset().top;

// $(window).scroll(function () {

//   var distanceTop = $(document).scrollTop();

//   if (distanceTop > nvp) {

//     $header.show().addClass("scroll")

//   }

//   if (distanceTop < nvp) {

//     $header.removeClass("scroll").hide()

// });

// document.querySelector(href).scrollIntoView({

//   behavior: "smooth",

//   block: "start"

// IntersectionObserverのインスタンスを生成

// ヒーローイメージが表示されているとき

// $header.removeClass("scrolled").hide()

// ヒーローイメージが表示されていないとき

/* harmony export (binding) */

// extracted by mini-css-extract-plugin
